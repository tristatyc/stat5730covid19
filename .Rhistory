usethis(dplyr)
library(usethis)
usethis_package(dplyr)
use_package(dplyr)
use_package("dplyr")
use_package("lubridate")
use_package("purrr")
use_package("readr")
use_package("tidyr")
use_package("googlesheets4")
library(tidyverse)
library(tidycensus)
library(stringr)
census_state_pop <- get_estimates(geography = "state", product = "population")
census_county_pop <- get_estimates(geography = "county", product = "population")
census_state_pop <- census_state_pop %>%
pivot_wider(names_from = "variable", values_from = "value") %>%
rename(state = NAME)
census_county_pop <- census_county_pop %>%
mutate(
county = str_split_fixed(NAME, " County, ", 2)[, 1],
state = str_split_fixed(NAME, " County, ", 2)[, 2]) %>%
pivot_wider(names_from = "variable", values_from = "value")
census_county_income <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
year = 2018) %>%
mutate(
county = str_split_fixed(NAME, " County, ", 2)[, 1],
state = str_split_fixed(NAME, " County, ", 2)[, 2]) %>%
pivot_wider(names_from = "variable", values_from = "estimate")
use_data(census_state_pop, census_county_pop, census_county_income)
use_mit_license()
use_mit_license(name = "Vincent Q. Vu")
?everything
use_pipe(FALSE)
use_package_doc()
use_pipe(FALSE)
devtools::document()
?matches
?cols
use_package(usmap)
use_package("usmap")
use_package("stringr")
devtools::document()
ls()
library(stat5730covid19)
